@model RemindMe.ViewModels.RegisterUserViewModel

@{
    ViewData["Title"] = "Register";
}

<h2>Register</h2>


<br />
<form asp-controller="RemindMe" asp-action="RegisterUser" method="post">
    <p>@ViewBag.PasswordError @ViewBag.UsernameError @ViewBag.UserNameContentError </p>

    <div class="form-group"  >
        <label  asp-for="Username"></label>
        <input class="form-control"  asp-for="Username" />
        <span  asp-validation-for="Username"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input class="form-control" asp-for="Email" />
        <span asp-validation-for="Email"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input class="form-control" asp-for="Password" />
        <span asp-validation-for="Password"></span>
    </div>
    <div class="form-group">
        <label asp-for="Verify"></label>
        <input class="form-control" asp-for="Verify" />
        <span asp-validation-for="Verify"></span>
    </div>
    <div class="form-group">
        @*<label type="hidden" asp-for="CreateDate"></label>   No label needed since the user doesn't input these values - the app calculates and populates them *@
        <input type="hidden" class="form-control" asp-for="CreateDate" />
    </div>
    <div class="form-group">
        @*<label type="hidden"  asp-for="UserId"></label> No label needed since the user doesn't input these values - the app calculates and populates them   *@
        <input type="hidden" class="form-control" asp-for="UserId" />
    </div>

    <input type="submit" value="Submit" />
</form>
